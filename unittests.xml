<?xml version="1.0" encoding="UTF-8"?><testsuite name="nosetests" tests="28" errors="0" failures="1" skip="0"><testcase classname="tests.test_models.TestCustomerModel" name="test_add_a_customer" time="0.049"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_bad_update" time="0.058"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_create_a_customer" time="0.058"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_deserialize_a_customer" time="0.058"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_deserialize_bad_data" time="0.064"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_find_by_active" time="0.073"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_find_by_address" time="0.070"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_find_by_email" time="0.075"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_find_by_first_name" time="0.077"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_find_by_last_name" time="0.070"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_find_customer" time="0.064"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_repr" time="0.057"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_serialize_a_customer" time="0.066"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_suspend_a_customer" time="0.067"></testcase><testcase classname="tests.test_models.TestCustomerModel" name="test_update_a_customer" time="0.064"></testcase><testcase classname="tests.test_service.TestCustomers" name="test_create_customer" time="0.072"></testcase><testcase classname="tests.test_service.TestCustomers" name="test_get_customer" time="0.073"></testcase><testcase classname="tests.test_service.TestCustomers" name="test_get_customer_list" time="0.082"></testcase><testcase classname="tests.test_service.TestCustomers" name="test_get_customer_not_found" time="0.063"></testcase><testcase classname="tests.test_service.TestCustomers" name="test_index" time="0.059"></testcase><testcase classname="tests.test_service.TestCustomers" name="test_query_customer_list_by_active" time="0.116"><system-out><![CDATA[5
10
[{'active': True, 'address': '23 lbj avenue', 'email': 'kb24@gmail.com', 'first_name': 'Steve', 'id': 1, 'last_name': 'James'}, {'active': False, 'address': '24 kobedrive', 'email': 'kb24@gmail.com', 'first_name': 'Steve', 'id': 2, 'last_name': 'James'}, {'active': True, 'address': '10 steve avenue', 'email': 'sn10@hotmail.com', 'first_name': 'Kobe', 'id': 3, 'last_name': 'Bryant'}, {'active': True, 'address': '23 lbj avenue', 'email': 'kb24@gmail.com', 'first_name': 'LeBron', 'id': 4, 'last_name': 'Nash'}, {'active': False, 'address': '10 steve avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Kobe', 'id': 5, 'last_name': 'James'}, {'active': False, 'address': '23 lbj avenue', 'email': 'sn10@hotmail.com', 'first_name': 'Kobe', 'id': 6, 'last_name': 'James'}, {'active': True, 'address': '24 kobedrive', 'email': 'kb24@gmail.com', 'first_name': 'Steve', 'id': 7, 'last_name': 'Bryant'}, {'active': False, 'address': '23 lbj avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Kobe', 'id': 8, 'last_name': 'Nash'}, {'active': True, 'address': '24 kobedrive', 'email': 'sn10@hotmail.com', 'first_name': 'Kobe', 'id': 9, 'last_name': 'James'}, {'active': False, 'address': '24 kobedrive', 'email': 'sn10@hotmail.com', 'first_name': 'LeBron', 'id': 10, 'last_name': 'Bryant'}]
]]></system-out></testcase><testcase classname="tests.test_service.TestCustomers" name="test_query_customer_list_by_address" time="0.113"><system-out><![CDATA[3
[{'active': True, 'address': '23 lbj avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Kobe', 'id': 1, 'last_name': 'Nash'}, {'active': True, 'address': '23 lbj avenue', 'email': 'lbj23@gmail.com', 'first_name': 'LeBron', 'id': 2, 'last_name': 'Bryant'}, {'active': True, 'address': '10 steve avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Kobe', 'id': 3, 'last_name': 'James'}, {'active': True, 'address': '23 lbj avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Steve', 'id': 4, 'last_name': 'Nash'}, {'active': True, 'address': '10 steve avenue', 'email': 'kb24@gmail.com', 'first_name': 'Steve', 'id': 5, 'last_name': 'James'}, {'active': True, 'address': '23 lbj avenue', 'email': 'lbj23@gmail.com', 'first_name': 'LeBron', 'id': 6, 'last_name': 'Nash'}, {'active': True, 'address': '10 steve avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Steve', 'id': 7, 'last_name': 'Bryant'}, {'active': True, 'address': '10 steve avenue', 'email': 'lbj23@gmail.com', 'first_name': 'LeBron', 'id': 8, 'last_name': 'Nash'}, {'active': False, 'address': '23 lbj avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Kobe', 'id': 9, 'last_name': 'Bryant'}, {'active': True, 'address': '10 steve avenue', 'email': 'lbj23@gmail.com', 'first_name': 'LeBron', 'id': 10, 'last_name': 'James'}]
]]></system-out></testcase><testcase classname="tests.test_service.TestCustomers" name="test_query_customer_list_by_email" time="0.115"><system-out><![CDATA[4
[{'active': True, 'address': '10 steve avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Steve', 'id': 1, 'last_name': 'James'}, {'active': False, 'address': '23 lbj avenue', 'email': 'kb24@gmail.com', 'first_name': 'Steve', 'id': 2, 'last_name': 'Nash'}, {'active': True, 'address': '23 lbj avenue', 'email': 'kb24@gmail.com', 'first_name': 'Steve', 'id': 3, 'last_name': 'Bryant'}, {'active': True, 'address': '10 steve avenue', 'email': 'lbj23@gmail.com', 'first_name': 'LeBron', 'id': 4, 'last_name': 'Nash'}, {'active': True, 'address': '24 kobedrive', 'email': 'lbj23@gmail.com', 'first_name': 'Steve', 'id': 5, 'last_name': 'Bryant'}, {'active': False, 'address': '10 steve avenue', 'email': 'kb24@gmail.com', 'first_name': 'Steve', 'id': 6, 'last_name': 'Bryant'}, {'active': False, 'address': '10 steve avenue', 'email': 'kb24@gmail.com', 'first_name': 'Steve', 'id': 7, 'last_name': 'Bryant'}, {'active': True, 'address': '24 kobedrive', 'email': 'kb24@gmail.com', 'first_name': 'Kobe', 'id': 8, 'last_name': 'Bryant'}, {'active': True, 'address': '10 steve avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Kobe', 'id': 9, 'last_name': 'Bryant'}, {'active': False, 'address': '10 steve avenue', 'email': 'sn10@hotmail.com', 'first_name': 'Steve', 'id': 10, 'last_name': 'Bryant'}]
]]></system-out></testcase><testcase classname="tests.test_service.TestCustomers" name="test_query_customer_list_by_first_name" time="0.117"><system-out><![CDATA[1
[{'active': False, 'address': '10 steve avenue', 'email': 'kb24@gmail.com', 'first_name': 'LeBron', 'id': 1, 'last_name': 'Bryant'}, {'active': False, 'address': '10 steve avenue', 'email': 'sn10@hotmail.com', 'first_name': 'Steve', 'id': 2, 'last_name': 'Bryant'}, {'active': True, 'address': '10 steve avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Steve', 'id': 3, 'last_name': 'Nash'}, {'active': False, 'address': '24 kobedrive', 'email': 'kb24@gmail.com', 'first_name': 'LeBron', 'id': 4, 'last_name': 'Nash'}, {'active': True, 'address': '24 kobedrive', 'email': 'lbj23@gmail.com', 'first_name': 'Kobe', 'id': 5, 'last_name': 'James'}, {'active': True, 'address': '10 steve avenue', 'email': 'sn10@hotmail.com', 'first_name': 'Steve', 'id': 6, 'last_name': 'Nash'}, {'active': True, 'address': '23 lbj avenue', 'email': 'sn10@hotmail.com', 'first_name': 'LeBron', 'id': 7, 'last_name': 'Bryant'}, {'active': True, 'address': '10 steve avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Steve', 'id': 8, 'last_name': 'Nash'}, {'active': False, 'address': '10 steve avenue', 'email': 'kb24@gmail.com', 'first_name': 'Kobe', 'id': 9, 'last_name': 'James'}, {'active': False, 'address': '23 lbj avenue', 'email': 'lbj23@gmail.com', 'first_name': 'LeBron', 'id': 10, 'last_name': 'Bryant'}]
]]></system-out></testcase><testcase classname="tests.test_service.TestCustomers" name="test_query_customer_list_by_last_name" time="0.118"><system-out><![CDATA[2
[{'active': True, 'address': '24 kobedrive', 'email': 'kb24@gmail.com', 'first_name': 'LeBron', 'id': 1, 'last_name': 'James'}, {'active': False, 'address': '23 lbj avenue', 'email': 'sn10@hotmail.com', 'first_name': 'Kobe', 'id': 2, 'last_name': 'James'}, {'active': True, 'address': '24 kobedrive', 'email': 'sn10@hotmail.com', 'first_name': 'Kobe', 'id': 3, 'last_name': 'Bryant'}, {'active': False, 'address': '10 steve avenue', 'email': 'kb24@gmail.com', 'first_name': 'LeBron', 'id': 4, 'last_name': 'Bryant'}, {'active': False, 'address': '10 steve avenue', 'email': 'sn10@hotmail.com', 'first_name': 'Steve', 'id': 5, 'last_name': 'Bryant'}, {'active': True, 'address': '23 lbj avenue', 'email': 'kb24@gmail.com', 'first_name': 'LeBron', 'id': 6, 'last_name': 'Bryant'}, {'active': True, 'address': '23 lbj avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Steve', 'id': 7, 'last_name': 'Bryant'}, {'active': True, 'address': '24 kobedrive', 'email': 'kb24@gmail.com', 'first_name': 'Steve', 'id': 8, 'last_name': 'Bryant'}, {'active': False, 'address': '24 kobedrive', 'email': 'sn10@hotmail.com', 'first_name': 'Kobe', 'id': 9, 'last_name': 'James'}, {'active': True, 'address': '23 lbj avenue', 'email': 'lbj23@gmail.com', 'first_name': 'Kobe', 'id': 10, 'last_name': 'James'}]
]]></system-out></testcase><testcase classname="tests.test_service.TestCustomers" name="test_suspend_customer" time="0.067"><failure type="builtins.AssertionError" message="412 != 200"><![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/vagrant/tests/test_service.py", line 218, in test_suspend_customer
    self.assertEqual(resp.status_code, status.HTTP_200_OK)
  File "/usr/lib/python3.6/unittest/case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/lib/python3.6/unittest/case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 412 != 200
]]></failure></testcase><testcase classname="tests.test_service.TestCustomers" name="test_suspend_not_available" time="0.069"></testcase><testcase classname="tests.test_service.TestCustomers" name="test_update_customer" time="0.078"></testcase></testsuite>